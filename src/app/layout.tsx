"use client";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { LinkUI } from "@/components/ui/link";
import { AuthContext } from "@/context/auth-context";
import React, { useContext } from "react";
import { useGetMeApi } from "@/lib/get-user";
import { FullScreenLoader } from "@/components/ui/loader";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const { getMeState, loadMe } = useGetMeApi();
  const userContext = useContext(AuthContext);
  const {
    process: { error, loading },
    user,
  } = getMeState;

  React.useEffect(() => {
    loadMe();
  }, [loadMe]);

  const render = () => {
    if (loading) return <FullScreenLoader />;

    return children;
  };

  return (
    <html lang="ru" className={`${geistSans.variable} ${geistMono.variable}`}>
      <body className="antialiased">
        <div className="flex flex-col h-screen">
          {/* Header */}
          <header className="bg-blue-500 text-white p-4 h-[60px] flex items-center">
            <h1 className="text-2xl font-bold">Header</h1>
          </header>

          <div className="flex flex-1">
            {/* Sidebar */}
            <aside className="w-[300px] bg-gray-200 p-4">
              <nav className="flex flex-col space-y-2">
                <LinkUI href="#" className="">
                  Link 1
                </LinkUI>
                <LinkUI href="#">Link 2</LinkUI>
                <LinkUI href="#">Link 3</LinkUI>
              </nav>
            </aside>

            {/* Main Content */}
            <main className="flex-1 p-4">
              <AuthContext.Provider value={null}>
                {render()}
              </AuthContext.Provider>
            </main>
          </div>
        </div>
      </body>
    </html>
  );
}
